@using EncuestasV2.Models;
@model encuesta_usuariosCLS

@{
    ViewBag.Title = "Agregar";
    List<SelectListItem> listaEmp = (List<SelectListItem>)ViewBag.listaEmpresa;
    List<SelectListItem> listaSex = (List<SelectListItem>)ViewBag.listaSexo;
    List<SelectListItem> listaEdades = (List<SelectListItem>)ViewBag.listaEdad;
    List<SelectListItem> listaEdoCivil = (List<SelectListItem>)ViewBag.listaEdoCivil;
    List<SelectListItem> listaOpciones = (List<SelectListItem>)ViewBag.listaOpciones;
    List<SelectListItem> listaProceso = (List<SelectListItem>)ViewBag.listaProceso;
    List<SelectListItem> listaPuesto = (List<SelectListItem>)ViewBag.listaPuesto;
    List<SelectListItem> listaContrata = (List<SelectListItem>)ViewBag.listaContrata;
    List<SelectListItem> listaPersonal = (List<SelectListItem>)ViewBag.listaPersonal;
    List<SelectListItem> listaJornada = (List<SelectListItem>)ViewBag.listaJornada;
    List<SelectListItem> listaRotacion = (List<SelectListItem>)ViewBag.listaRotacion;
    List<SelectListItem> listaTiempo = (List<SelectListItem>)ViewBag.listaTiempo;
    List<SelectListItem> listaExpLab = (List<SelectListItem>)ViewBag.listaExpLab;


}
<style>

.btn-platzi{
    background:#97c93e;
    color:white;
}
.btn-platzi:hover
{
background-color: #82ad36;
color:white;
}
</style>
<script>
    function InputToUpper(obj) {
        if (obj.value != "") {
            obj.value = obj.value.toUpperCase();
        }
    }

</script>

<!--Main-->

<main id="main">
    <div id="carousel" class="carousel slide" data-ride="carousel" data-pause="false">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img class="d-block w-100" src="~/Content/images/empresarios1.jpg" alt="First slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="~/Content/images/empresarios2.jpg" alt="Second slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="~/Content/images/empresarios3.jpg" alt="Third slide">
            </div>
            <div class="overlay">
                <div class="container">
                    <div class="row align-items-center">
                        <div class="col-md-6 offset-md-6 text-center text-md-right">
                            <h1>Consultoria y Seguridad</h1>
                            <p class="d-none d-md-block">Una herramienta para diagnostico de sus trabajadores y mejora de su compañia</p>
                            <button type="button" class="btn btn-platzi btn-lg" data-toggle="modal" data-target="#exampleModalLong">Registro</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</main>
<!--/Main-->
<!-- Modal -->
<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Registro de Empleados</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Agregar", "Usuarios", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()


                    <div>
                        @Html.LabelFor(model => model.usua_nombre)
                        @Html.EditorFor(model => model.usua_nombre, new { htmlAttributes = new { @class = "form-control", required = "required", onkeyup = "InputToUpper(this);", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.usua_nombre, "", new { @class = "text-danger" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_empresa)
                        @Html.DropDownListFor(model => model.usua_empresa, listaEmp, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_empresa, "", new { @class = "text-danger" })
                    </div>


                    <div>
                        @Html.LabelFor(model => model.usua_n_usuario)

                        @Html.EditorFor(model => model.usua_n_usuario, new { htmlAttributes = new { @class = "form-control", required = "required", type = "email", placeholder = "Introdusca su email", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.usua_n_usuario, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_p_usuario)

                        @Html.EditorFor(model => model.usua_p_usuario, new { htmlAttributes = new { @class = "form-control", required = "required", autocomplete = "off", type = "password" } })
                        @Html.ValidationMessageFor(model => model.usua_p_usuario, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_genero)

                        @Html.DropDownListFor(model => model.usua_genero, listaSex, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_genero, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_edad)

                        @Html.DropDownListFor(model => model.usua_edad, listaEdades, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_edad, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_edo_civil)

                        @Html.DropDownListFor(model => model.usua_edo_civil, listaEdoCivil, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_edo_civil, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_sin_forma)

                        @Html.DropDownListFor(model => model.usua_sin_forma, listaOpciones, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_sin_forma, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_primaria)

                        @Html.DropDownListFor(model => model.usua_primaria, listaProceso, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_primaria, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_secundaria)

                        @Html.DropDownListFor(model => model.usua_secundaria, listaProceso, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_secundaria, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_preparatoria)

                        @Html.DropDownListFor(model => model.usua_preparatoria, listaProceso, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_preparatoria, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_tecnico)

                        @Html.DropDownListFor(model => model.usua_tecnico, listaProceso, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_tecnico, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_licenciatura)

                        @Html.DropDownListFor(model => model.usua_licenciatura, listaProceso, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_licenciatura, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_maestria)

                        @Html.DropDownListFor(model => model.usua_maestria, listaProceso, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_maestria, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_doctorado)

                        @Html.DropDownListFor(model => model.usua_doctorado, listaProceso, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_doctorado, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_tipo_puesto)
                        @Html.DropDownListFor(model => model.usua_tipo_puesto, listaPuesto, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_tipo_puesto, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_tipo_contratacion)

                        @Html.DropDownListFor(model => model.usua_tipo_contratacion, listaContrata, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_tipo_contratacion, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_tipo_personal)

                        @Html.DropDownListFor(model => model.usua_tipo_personal, listaPersonal, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_tipo_personal, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_tipo_jornada)

                        @Html.DropDownListFor(model => model.usua_tipo_jornada, listaJornada, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_tipo_jornada, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_rotacion_turno)

                        @Html.DropDownListFor(model => model.usua_rotacion_turno, listaRotacion, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_rotacion_turno, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_tiempo_puesto)

                        @Html.DropDownListFor(model => model.usua_tiempo_puesto, listaTiempo, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_tiempo_puesto, "", new { @class = "text-danger" })

                    </div>

                    <div>
                        @Html.LabelFor(model => model.usua_exp_laboral)

                        @Html.DropDownListFor(model => model.usua_exp_laboral, listaExpLab, null, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.usua_exp_laboral, "", new { @class = "text-danger" })

                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                        <button type="submit" class="btn btn-primary">Registrar Usuario</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!--/Modal -->
<!-- Optional JavaScript -->
<!-- jQuery first, then Popper.js, then Bootstrap JS -->
@*<div class="row">
        <div class="col-md-6">

                <br />
                <div>
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Registrar Usuario" class="btn btn-primary" />
                    </div>
                </div>

            }
        </div>


    </div>*@
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
